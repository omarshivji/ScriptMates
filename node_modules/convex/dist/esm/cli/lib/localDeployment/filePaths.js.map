{
  "version": 3,
  "sources": ["../../../../../src/cli/lib/localDeployment/filePaths.ts"],
  "sourcesContent": ["/*\n~/.convex\n  binaries\n    convex-backend.zip\n    0.0.1\n      convex-local-backend[.exe] // convex-local-backend.exe on windows\n    0.0.2\n      convex-local-backend[.exe]\n  dashboard\n    config.json\n    out\n    // if present, output files from building the self-hosted dashboard which can\n    // be served using `npx serve`\n    index.html\n  convex-backend-state\n    local-my_team-chess\n      config.json // contains `LocalDeploymentConfig`\n      convex_local_storage\n      convex_local_backend.sqlite3\n    local-my_team-whisper\n      config.json\n      convex_local_storage\n      convex_local_backend.sqlite3\n    tryitout-convex-backend-state\n      tryitout-chess\n        config.json\n        convex_local_storage\n        convex_local_backend.sqlite3\n*/\n\nimport path from \"path\";\nimport { rootDirectory } from \"../utils/utils.js\";\nimport { Context, logVerbose } from \"../../../bundler/context.js\";\nimport { localDeploymentUrl } from \"./run.js\";\nimport { recursivelyDelete } from \"../fsUtils.js\";\n\n// Naming is hard, but \"local\" refers to deployments linked to a Convex project\n// and \"tryItOut\" refers to deployments that are not linked to a Convex project\n// (but in both cases they are running locally).\nexport type LocalDeploymentKind = \"local\" | \"tryItOut\";\n\nexport function rootDeploymentStateDir(kind: LocalDeploymentKind) {\n  return path.join(\n    rootDirectory(),\n    kind === \"local\" ? \"convex-backend-state\" : \"tryitout-convex-backend-state\",\n  );\n}\n\nexport function deploymentStateDir(\n  deploymentKind: LocalDeploymentKind,\n  deploymentName: string,\n) {\n  return path.join(rootDeploymentStateDir(deploymentKind), deploymentName);\n}\n\nexport type LocalDeploymentConfig = {\n  ports: {\n    cloud: number;\n    site: number;\n  };\n  backendVersion: string;\n  adminKey: string;\n  // If not present, use the default instance secret for local backends\n  instanceSecret?: string;\n};\nexport function loadDeploymentConfig(\n  ctx: Context,\n  deploymentKind: LocalDeploymentKind,\n  deploymentName: string,\n): LocalDeploymentConfig | null {\n  const dir = deploymentStateDir(deploymentKind, deploymentName);\n  const configFile = path.join(dir, \"config.json\");\n  if (!ctx.fs.stat(dir).isDirectory()) {\n    return null;\n  }\n  if (ctx.fs.exists(configFile)) {\n    const content = ctx.fs.readUtf8File(configFile);\n    try {\n      return JSON.parse(content);\n    } catch (e) {\n      logVerbose(ctx, `Failed to parse local deployment config: ${e as any}`);\n      return null;\n    }\n  }\n  return null;\n}\n\nexport function saveDeploymentConfig(\n  ctx: Context,\n  deploymentKind: LocalDeploymentKind,\n  deploymentName: string,\n  config: LocalDeploymentConfig,\n) {\n  const dir = deploymentStateDir(deploymentKind, deploymentName);\n  const configFile = path.join(dir, \"config.json\");\n  if (!ctx.fs.exists(dir)) {\n    ctx.fs.mkdir(dir, { recursive: true });\n  }\n  ctx.fs.writeUtf8File(configFile, JSON.stringify(config));\n}\n\nexport function binariesDir() {\n  return path.join(rootDirectory(), \"binaries\");\n}\n\nexport function binaryZip() {\n  return path.join(binariesDir(), \"convex-backend.zip\");\n}\n\nexport function dashboardZip() {\n  return path.join(dashboardDir(), \"dashboard.zip\");\n}\n\nexport function versionedBinaryDir(version: string) {\n  return path.join(binariesDir(), version);\n}\n\nexport function executablePath(version: string) {\n  const ext = process.platform === \"win32\" ? \".exe\" : \"\";\n  return path.join(versionedBinaryDir(version), `convex-local-backend${ext}`);\n}\n\nexport function dashboardDir() {\n  return path.join(rootDirectory(), \"dashboard\");\n}\n\nexport async function resetDashboardDir(ctx: Context) {\n  const dir = dashboardDir();\n  if (ctx.fs.exists(dir)) {\n    await recursivelyDelete(ctx, dir);\n  }\n  ctx.fs.mkdir(dir, { recursive: true });\n}\n\nexport function dashboardOutDir() {\n  return path.join(dashboardDir(), \"out\");\n}\n\nexport type DashboardConfig = {\n  port: number;\n  apiPort: number;\n  version: string;\n};\nexport function loadDashboardConfig(ctx: Context) {\n  const configFile = path.join(dashboardDir(), \"config.json\");\n  if (!ctx.fs.exists(configFile)) {\n    return null;\n  }\n  const content = ctx.fs.readUtf8File(configFile);\n  try {\n    return JSON.parse(content);\n  } catch (e) {\n    logVerbose(ctx, `Failed to parse dashboard config: ${e as any}`);\n    return null;\n  }\n}\n\nexport function saveDashboardConfig(ctx: Context, config: DashboardConfig) {\n  const configFile = path.join(dashboardDir(), \"config.json\");\n  if (!ctx.fs.exists(dashboardDir())) {\n    ctx.fs.mkdir(dashboardDir(), { recursive: true });\n  }\n  ctx.fs.writeUtf8File(configFile, JSON.stringify(config));\n}\n"],
  "mappings": "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",
  "names": []
}
